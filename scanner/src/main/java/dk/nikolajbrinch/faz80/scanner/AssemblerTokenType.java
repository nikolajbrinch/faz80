package dk.nikolajbrinch.faz80.scanner;

import dk.nikolajbrinch.scanner.TokenType;

/**
 * Represents a token type in the assembler
 */
public enum AssemblerTokenType implements TokenType {
  /*
   * Single character tokens
   */

  COMMA,
  HASH,
  LEFT_BRACE,
  LEFT_BRACKET,
  LEFT_PAREN,
  MINUS,
  NEWLINE,
  PERCENT,
  PLUS,
  RIGHT_BRACE,
  RIGHT_BRACKET,
  RIGHT_PAREN,
  SLASH,
  STAR,
  STAR_STAR,

  /*
   * One, two or three character tokens
   */
  AND,
  AND_AND,
  BANG,
  BANG_EQUAL,
  CARET,
  CARET_CARET,
  COLON,
  COLON_COLON,
  DOLLAR,
  DOLLAR_DOLLAR,
  EQUAL,
  EQUAL_EQUAL,
  GREATER,
  GREATER_GREATER,
  GREATER_GREATER_GREATER,
  GREATER_EQUAL,
  LESS,
  LESS_LESS,
  LESS_EQUAL,
  LESS_GREATER,
  PIPE,
  PIPE_PIPE,
  TILDE,

  /*
   * Literals
   */
  BINARY_NUMBER,
  CHAR,
  COMMENT,
  HEX_NUMBER,
  DECIMAL_NUMBER,
  IDENTIFIER,
  OCTAL_NUMBER,
  STRING,

  /*
   * Keywords
   */
  ALIGN,
  AREA,
  ASMPC,
  ASSERT,
  ASSIGN,
  CODE_SEGMENT,
  CONSTANT,
  DATA,
  DATA_BYTE,
  DATA_BLOCK,
  DATA_LONG,
  DATA_PTR,
  DATA_SEGMENT,
  DATA_TEXT,
  DATA_WORD_BE,
  DATA_WORD_LE,
  DEFINE,
  DEPHASE,
  DUPLICATE,
  DIRECTIVE,
  ERROR,
  ELSE,
  ELSE_IF,
  ELSE_IF_DEFINED,
  ELSE_IF_NOT_DEFINED,
  END,
  ENDDUPLICATE,
  ENDIF,
  ENDLOCAL,
  ENDMACRO,
  ENDREPEAT,
  EOF,
  EXITMACRO,
  EXTERN,
  GLOBAL,
  GROUP,
  IF,
  IF_DEFINED,
  IF_NOT_DEFINED,
  INCLUDE,
  INSERT,
  LOCAL,
  MACRO,
  MODULE,
  NONE,
  ORIGIN,
  PHASE,
  PUBLIC,
  REPEAT,
  REPEAT_CHAR,
  REPEAT_EXPR,
  SECTION,
  SET,
  TARGET,
  TEXT,
  UNDEFINE,
  VARS;
}
